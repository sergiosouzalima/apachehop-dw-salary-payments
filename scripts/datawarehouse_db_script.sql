-- Project......: Employee Salaries Data Warehouse
-- File name....: datawarehouse_db_script.sql
-- Database name: datawarehouse_db
-- RDBMS........: PostgreSQL

DROP TABLE IF EXISTS public.DIM_DIVISAO;

CREATE TABLE public.DIM_DIVISAO(
    SK_ID_DIVISAO INTEGER NOT NULL,
    NK_ID_DIVISAO INTEGER,
    DS_DIVISAO VARCHAR(100),
    DIM_DS_OBSERVACAO VARCHAR(120),
    ETL_NR_VERSION INTEGER,
    ETL_DT_INICIO DATE,
    ETL_DT_FIM DATE,
    TS_ETL_CARGA TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT DIM_DIVISAO_PK PRIMARY KEY(SK_ID_DIVISAO)
);

INSERT INTO public.DIM_DIVISAO(
	SK_ID_DIVISAO, 
	NK_ID_DIVISAO, 
	DS_DIVISAO, 
	DIM_DS_OBSERVACAO, 
	ETL_NR_VERSION, 
	ETL_DT_INICIO, 
	ETL_DT_FIM
)
VALUES(
    0, -- SK_ID_DIVISAO -- registro default do Apache HOP
    0, -- NK_ID_DIVISAO
    '** NAO ENCONTRADO **', -- DS_DIVISAO  
    'NAO ENCONTRADO = Quando a tabela fato não acha a SK na tabela dimensão.', -- DIM_DS_OBSERVACAO
    0, -- ETL_NR_VERSION
    '1900-01-01', -- ETL_DT_INICIO 
    '2199-12-31' -- ETL_DT_FIM
);                

DROP TABLE IF EXISTS public.DIM_SETOR;

CREATE TABLE public.DIM_SETOR(
    SK_ID_SETOR INTEGER NOT NULL,
    NK_ID_SETOR INTEGER,
    DS_SETOR VARCHAR(100),
    DIM_DS_OBSERVACAO VARCHAR(120),
    ETL_NR_VERSION INTEGER,
    ETL_DT_INICIO DATE,
    ETL_DT_FIM DATE,
    TS_ETL_CARGA TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT DIM_SETOR_PK PRIMARY KEY(SK_ID_SETOR)
);

INSERT INTO public.DIM_SETOR(
	SK_ID_SETOR, 
	NK_ID_SETOR, 
	DS_SETOR, 
	DIM_DS_OBSERVACAO, 
	ETL_NR_VERSION, 
	ETL_DT_INICIO, 
	ETL_DT_FIM
)
VALUES(
    0, -- SK_ID_SETOR -- registro default do Apache HOP
    0, -- NK_ID_SETOR
    '** NAO ENCONTRADO **', -- DS_SETOR  
    'NAO ENCONTRADO = Quando a tabela fato não acha a SK na tabela dimensão.', -- DIM_DS_OBSERVACAO
    0, -- ETL_NR_VERSION
    '1900-01-01', -- ETL_DT_INICIO 
    '2199-12-31' -- ETL_DT_FIM
);                

DROP TABLE IF EXISTS public.DIM_CARGO;

CREATE TABLE public.DIM_CARGO(
    SK_ID_CARGO INTEGER NOT NULL,
    NK_ID_CARGO INTEGER,
    DS_CARGO VARCHAR(100),
    DIM_DS_OBSERVACAO VARCHAR(120),
    ETL_NR_VERSION INTEGER,
    ETL_DT_INICIO DATE,
    ETL_DT_FIM DATE,
    TS_ETL_CARGA TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT DIM_CARGO_PK PRIMARY KEY(SK_ID_CARGO)
);

INSERT INTO public.DIM_CARGO(
	SK_ID_CARGO, 
	NK_ID_CARGO, 
	DS_CARGO, 
	DIM_DS_OBSERVACAO, 
	ETL_NR_VERSION, 
	ETL_DT_INICIO, 
	ETL_DT_FIM
)
VALUES(
    0, -- SK_ID_CARGO -- registro default do Apache HOP
    0, -- NK_ID_CARGO
    '** NAO ENCONTRADO **', -- DS_CARGO 
    'NAO ENCONTRADO = Quando a tabela fato não acha a SK na tabela dimensão.', -- DIM_DS_OBSERVACAO
    0, -- ETL_NR_VERSION
    '1900-01-01', -- ETL_DT_INICIO 
    '2199-12-31' -- ETL_DT_FIM
);


DROP TABLE IF EXISTS public.DIM_DEPARTAMENTO;

CREATE TABLE public.DIM_DEPARTAMENTO(
    SK_ID_DEPARTAMENTO INTEGER NOT NULL,
    NK_ID_DEPARTAMENTO INTEGER,
    DS_DEPARTAMENTO VARCHAR(100),
    DIM_DS_OBSERVACAO VARCHAR(120),
    ETL_NR_VERSION INTEGER,
    ETL_DT_INICIO DATE,
    ETL_DT_FIM DATE,
    TS_ETL_CARGA TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT DIM_DEPARTAMENTO_PK PRIMARY KEY(SK_ID_DEPARTAMENTO)
);

INSERT INTO public.DIM_DEPARTAMENTO(
	SK_ID_DEPARTAMENTO, 
	NK_ID_DEPARTAMENTO, 
	DS_DEPARTAMENTO, 
	DIM_DS_OBSERVACAO, 
	ETL_NR_VERSION, 
	ETL_DT_INICIO, 
	ETL_DT_FIM
)
VALUES(
    0, -- SK_ID_DEPARTAMENTO -- registro default do Apache HOP
    0, -- NK_ID_DEPARTAMENTO
    '** NAO ENCONTRADO **', -- DS_DEPARTAMENTO 
    'NAO ENCONTRADO = Quando a tabela fato não acha a SK na tabela dimensão.', -- DIM_DS_OBSERVACAO
    0, -- ETL_NR_VERSION
    '1900-01-01', -- ETL_DT_INICIO 
    '2199-12-31' -- ETL_DT_FIM
);

DROP TABLE IF EXISTS public.DIM_FUNCIONARIO;

CREATE TABLE public.DIM_FUNCIONARIO(
    SK_ID_FUNCIONARIO INTEGER NOT NULL,
    NK_ID_FUNCIONARIO INTEGER,
    NM_FUNCIONARIO VARCHAR(100),
    NM_SOBRENOME_FUNCIONARIO VARCHAR(100),
    DIM_DS_OBSERVACAO VARCHAR(120),
    ETL_NR_VERSION INTEGER,
    ETL_DT_INICIO DATE,
    ETL_DT_FIM DATE,
    TS_ETL_CARGA TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT DIM_FUNCIONARIO_PK PRIMARY KEY(SK_ID_FUNCIONARIO)
);

INSERT INTO public.DIM_FUNCIONARIO(
	SK_ID_FUNCIONARIO, 
	NK_ID_FUNCIONARIO, 
	NM_FUNCIONARIO, 
	NM_SOBRENOME_FUNCIONARIO, 
	DIM_DS_OBSERVACAO, 
	ETL_NR_VERSION, 
	ETL_DT_INICIO, 
	ETL_DT_FIM
)
VALUES(
    0, -- SK_ID_FUNCIONARIO -- registro default do Apache HOP
    0, -- NK_ID_FUNCIONARIO
    '** NAO ENCONTRADO **', -- NM_FUNCIONARIO 
    '** NAO ENCONTRADO **', -- NM_SOBRENOME_FUNCIONARIO 
    'NAO ENCONTRADO = Quando a tabela fato não acha a SK na tabela dimensão.', -- DIM_DS_OBSERVACAO
    0, -- ETL_NR_VERSION
    '1900-01-01', -- ETL_DT_INICIO 
    '2199-12-31' -- ETL_DT_FIM
);



DROP TABLE IF EXISTS public.CALENDAR;

CREATE TABLE public.CALENDAR(
  SK_ID_CALENDAR INTEGER NOT NULL,
  CALENDAR_DATE DATE NOT NULL,
  CALENDAR_YEAR INTEGER NOT NULL,
  CALENDAR_MONTH INTEGER NOT NULL,
  CALENDAR_DAY INTEGER NOT NULL,
  MONTH_NAME VARCHAR(12) NOT NULL,
  WEEK_DAY_NAME VARCHAR(3) NOT NULL,
  ETL_LOADED_AT DATE NOT NULL,
  TS_ETL_CARGA TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT DIM_CALENDAR_PK PRIMARY KEY(SK_ID_CALENDAR)
);

DROP TABLE IF EXISTS public.FATO_FOLHA_PAGAMENTO;

CREATE TABLE public.FATO_FOLHA_PAGAMENTO(
  ID_FATO INTEGER NOT NULL,
  SK_ID_CALENDAR INTEGER,
  SK_ID_FUNCIONARIO INTEGER,
  SK_ID_DEPARTAMENTO INTEGER,
  SK_ID_CARGO INTEGER,
  SK_ID_SETOR INTEGER,
  DT_PAGAMENTO_SALARIO DATE,
  VL_FUNCIONARIO_SALARIO NUMERIC(18,2), 
  TS_ETL_CARGA TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT FATO_FOLHA_PAGAMENTO_PK PRIMARY KEY(ID_FATO)
);


